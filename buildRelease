#!/bin/bash
#
# DESCRIPTION
#	Invoke release build
#
# USAGE:
#	Steps to invoke this script.
#		export NLEXTERNALDIR=<path>
#		export BUILD_NUMBER=<#>
#		source setEnv
#		./buildRelease
#
# HUDSON BUILD:
#	cd $WORKSPACE
#	export NLEXTERNALDIR=c:/hudson/jobs/source_main_external/workspace
#	source setEnv
#	./buildRelease
#
# DEBUG:
#	To debug ANT problems, add -v option to an ANT command. For example:
#		${ANT} -v -f scripts/build_xlib.xml

export JAVA_HOME=$NLEXTERNALDIR/j2sdk/jdk1.7.0_75
export ANT_HOME=$NLEXTERNALDIR/apache-ant/apache-ant-1.9.4
export MAVEN_HOME=$NLEXTERNALDIR/apache-maven/apache-maven-3.5.0

ANT=${ANT_HOME}/bin/ant
LOG_FILE=buildRelease.log
BUILD_MANIFEST_FILE=build.manifest

(
set -x
# Extract Perforce Workspace and Hudson info (only if running on Hudson)
if [ -f ../config.xml ]; then
	scripts/getGitWorkspaceInfo.pl ../config.xml
fi

# Prepare environment
./configure --type=release || exit $?
source build.config

# Compile code
${MAVEN_HOME}/bin/mvn package

# Create ZIP of jars that we require
mkdir -p ${WORKSPACE}/build
cp ./openaz-pep/target/openaz-pep-*.jar \
		./openaz-xacml/target/openaz-xacml-*.jar \
		./openaz-xacml-pap-rest/target/openaz-xacml-pap-rest-*.jar \
		./openaz-xacml-pdp/target/openaz-xacml-pdp-*.jar \
		./openaz-xacml-pdp-rest/target/openaz-xacml-pdp-rest-*.jar \
		./openaz-xacml-rest/target/openaz-xacml-rest-*.jar \
		./openaz-xacml-test/target/openaz-xacml-test-*.jar \
		${WORKSPACE}/build/
cd ${WORKSPACE}/build ; zip -j ${PACKAGE_NAME}-${VERSION_STR}-${BUILD_NUMBER}-${BUILD_DATE_LONG}.zip *.jar

# Publish packages and artifacts to BODA only if PUBLISH_TO_BODA environment variable is set (set in Jenkins build process)
cd ${WORKSPACE}/
export ANT_OPTS="-Xmx1024M -XX:PermSize=128m -XX:MaxPermSize=512m"
export ANT_ARGS="-Dnlbuildroot=${NLBUILDROOT} -Dnlexternaldir=${NLEXTERNALDIR} -Dversion_str=${VERSION_STR} -Dversion_build_short=${VERSION_BUILD_SHORT} -Dbuild_date_long=${BUILD_DATE_LONG}"
if [ "X${PUBLISH_TO_BODA}" = "XYes" -o "X${PUBLISH_TO_BODA}" = "Xyes" -o "X${PUBLISH_TO_BODA}" = "XYES" -o "X${PUBLISH_TO_BODA}" = "X1" ]
then
	${ANT} -f scripts/build_publish.xml || exit $?
fi

# Create and publish build manifest
scripts/createBuildManifest.pl ${LOG_FILE} > ${BUILD_MANIFEST_FILE} || exit $?
# Publish packages and artifacts to BODA only if PUBLISH_TO_BODA environment variable is set (set in Jenkins build process)
if [ "X${PUBLISH_TO_BODA}" = "XYes" -o "X${PUBLISH_TO_BODA}" = "Xyes" -o "X${PUBLISH_TO_BODA}" = "XYES" -o "X${PUBLISH_TO_BODA}" = "X1" ]
then
	${ANT} -f scripts/build_publish.xml manifest || exit $?
fi
set +x

echo
echo
echo "####################### BUILD MANIFEST CONTENTS ########################"
cat ${WORKSPACE}/${BUILD_MANIFEST_FILE}
echo "########################################################################"
) 2>&1 | tee ${LOG_FILE}

exit ${PIPESTATUS[0]}
